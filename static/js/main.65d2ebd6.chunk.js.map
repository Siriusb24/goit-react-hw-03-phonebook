{"version":3,"sources":["components/Form/Form.module.css","components/List/ListItem.module.css","components/Filter/Filter.module.css","components/List/PhoneBookList.module.css","components/Section/Section.module.css","components/Form/Form.js","components/List/ListItem.js","components/List/PhoneBookList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChangeName","e","target","value","setState","handleChangeNumber","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","reset","className","s","form","this","label","type","pattern","title","required","onChange","input","button","Component","ListItem","onDeleteContact","item","onClick","PhoneBookList","conteiner","map","Filter","Section","children","section","App","contacts","filter","formSubmit","newContact","find","alert","console","log","handleChangeFilter","handleFilter","normalizeContact","toLowerCase","includes","handleDeleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65d2ebd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"number\":\"Form_number__ZJwfO\",\"name\":\"Form_name__34-ms\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ListItem_item__1cygd\",\"number\":\"ListItem_number__1tWUw\",\"button\":\"ListItem_button__1eqha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"input\":\"Filter_input__2DoVp\",\"title\":\"Filter_title__mtLuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"PhoneBookList_conteiner__1aIXm\",\"title\":\"PhoneBookList_title__3SOPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from '../Form/Form.module.css';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChangeName = e => {\n    const { name, value } = e.target;\n    //console.log(e.target.name)\n\n    this.setState({ [name]: value });\n  };\n\n  handleChangeNumber = e => {\n    const { name, value } = e.target;\n    //console.log(e.target.name)\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state)\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: uuidv4(),\n    };\n\n    this.props.onSubmit(contact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          <span className={s.name}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChangeName}\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          <span className={s.number}>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChangeNumber}\n            className={s.input}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from '../List/ListItem.module.css';\n\nexport default function ListItem({ name, number, id, onDeleteContact }) {\n  //console.log(id);\n  return (\n    <li className={s.item}>\n      {name}:<span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import ListItem from './ListItem';\nimport PropTypes from 'prop-types';\nimport s from '../List/PhoneBookList.module.css';\n\nexport default function PhoneBookList({ contact, onDeleteContact }) {\n  //console.log(contact)\n  return (\n    <div className={s.conteiner}>\n      <h2 className={s.title}>Phone List of friends</h2>\n      <ul>\n        {contact.map(({ name, number, id }) => (\n          <ListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nPhoneBookList.propTypes = {\n  contact: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.form}>\n      <h2 className={s.title}>Find contacts by name</h2>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport s from '../Section/Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import './App.css';\nimport { Component } from 'react';\nimport Form from 'components/Form/Form';\nimport PhoneBookList from 'components/List/PhoneBookList';\nimport Filter from 'components/Filter/Filter';\nimport Section from './components/Section/Section';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      console.log('contacts were updated');\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  formSubmit = newContact => {\n    const dublicate = this.state.contacts.find(\n      contact => newContact.name === contact.name,\n    );\n\n    if (dublicate) {\n      alert(`${newContact.name} has already use`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\n    console.log(newContact);\n  };\n\n  handleChangeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  handleFilter = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizeContact = filter.toLowerCase();\n\n    //console.log(normalizeContact)\n\n    const needContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeContact),\n    );\n\n    return needContacts;\n  };\n\n  handleDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.handleFilter();\n\n    return (\n      <Section title=\"Phonebook\">\n        <Form onSubmit={this.formSubmit} />\n        <Filter value={filter} onChange={this.handleChangeFilter} />\n        <PhoneBookList\n          contact={filteredContacts}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </Section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}